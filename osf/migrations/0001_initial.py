# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-10-11 20:22
from __future__ import unicode_literals

import dirtyfields.dirtyfields
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import functools
import osf.models.base
import osf.models.conference
import osf.models.mixins
import osf.models.oauth
import osf.models.sanctions
import osf.models.spam
import osf.models.user
import osf.models.validators
import osf.utils.datetime_aware_jsonfield
import osf.utils.fields
import website.security
import website.addons.wiki.model


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='OSFUser',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all '
                                                               'permissions without explicitly assigning '
                                                               'them.',
                                                     verbose_name='superuser status')),
                ('guid_string', django.contrib.postgres.fields.ArrayField(
                    base_field=models.CharField(blank=True, max_length=255, null=True), blank=True, null=True,
                    size=None)),
                ('content_type_pk', models.PositiveIntegerField(blank=True, null=True)),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('fullname', models.CharField(blank=True, max_length=255)),
                ('is_registered', models.BooleanField(db_index=True, default=False)),
                ('is_claimed', models.BooleanField(db_index=True, default=False)),
                ('security_messages',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('is_invited', models.BooleanField(db_index=True, default=False)),
                ('unclaimed_records',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('contributor_added_email_records',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('verification_key', models.CharField(blank=True, max_length=255, null=True)),
                ('email_last_sent', models.DateTimeField(blank=True, null=True)),
                ('emails',
                 django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255),
                                                           blank=True, default=list, size=None)),
                ('email_verifications',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('mailing_lists',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('mailchimp_mailing_lists',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('osf_mailing_lists', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True,
                                                                                                default=osf.models.user.get_default_mailing_lists)),
                ('date_registered', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('given_name', models.CharField(blank=True, max_length=255)),
                ('middle_names', models.CharField(blank=True, max_length=255)),
                ('family_name', models.CharField(blank=True, max_length=255)),
                ('suffix', models.CharField(blank=True, max_length=255)),
                ('external_identity',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('jobs', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=list)),
                ('schools',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=list)),
                ('social', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict,
                                                                                     validators=[
                                                                                         osf.models.validators.validate_social])),
                ('piwik_token', models.CharField(blank=True, max_length=255)),
                ('date_last_login', models.DateTimeField(blank=True, null=True)),
                ('date_confirmed', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('date_disabled', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('comments_viewed_timestamp',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('timezone', models.CharField(default=b'Etc/UTC', max_length=255)),
                ('locale', models.CharField(default=b'en_US', max_length=255)),
                ('requested_deactivation', models.BooleanField(default=False)),
                ('notifications_configured',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AbstractNode',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid_string', django.contrib.postgres.fields.ArrayField(
                    base_field=models.CharField(blank=True, max_length=255, null=True), blank=True, null=True,
                    size=None)),
                ('content_type_pk', models.PositiveIntegerField(blank=True, null=True)),
                ('spam_status', models.IntegerField(blank=True, db_index=True, default=None, null=True)),
                ('spam_pro_tip', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('spam_data',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('date_last_reported',
                 models.DateTimeField(blank=True, db_index=True, default=None, null=True)),
                ('reports',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict,
                                                                           validators=[
                                                                               osf.models.spam._validate_reports])),
                ('type', models.CharField(choices=[('osf.node', 'node'), ('osf.collection', 'collection'),
                                                   ('osf.registration', 'registration')], db_index=True,
                                          max_length=255)),
                ('category', models.CharField(blank=True, choices=[(b'', b'Uncategorized'),
                                                                   (b'communication', b'Communication'),
                                                                   (b'hypothesis', b'Hypothesis'),
                                                                   (b'data', b'Data'),
                                                                   (b'instrumentation', b'Instrumentation'), (
                                                                   b'methods and measures',
                                                                   b'Methods and Measures'),
                                                                   (b'analysis', b'Analysis'),
                                                                   (b'project', b'Project'),
                                                                   (b'other', b'Other'),
                                                                   (b'procedure', b'Procedure'),
                                                                   (b'software', b'Software')], default=b'',
                                              max_length=255)),
                ('child_node_subscriptions',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('deleted_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, default=b'')),
                ('file_guid_to_share_uuids',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('forked_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_fork', models.BooleanField(db_index=True, default=False)),
                ('is_public', models.BooleanField(db_index=True, default=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('piwik_site_id', models.IntegerField(blank=True, null=True)),
                ('public_comments', models.BooleanField(default=True)),
                ('suspended', models.BooleanField(db_index=True, default=False)),
                ('title', models.TextField(validators=[osf.models.validators.validate_title])),
                ('wiki_pages_current',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('wiki_pages_versions',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('wiki_private_uuids',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('preprint_created', models.DateTimeField(blank=True, null=True)),
                ('preprint_doi', models.CharField(blank=True, max_length=128, null=True,
                                                  validators=[osf.models.validators.validate_doi])),
                ('_is_preprint_orphan', models.NullBooleanField(default=False)),
                ('is_bookmark_collection', models.NullBooleanField(db_index=True, default=False)),
                ('registered_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('registered_meta',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict,
                                                                           null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(
            dirtyfields.dirtyfields.DirtyFieldsMixin, osf.models.mixins.CommentableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AlternativeCitation',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('name', models.CharField(max_length=256)),
                ('text', models.CharField(max_length=2048)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApiOAuth2Application',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('client_id',
                 models.CharField(db_index=True, default=osf.models.oauth.generate_client_id, max_length=50,
                                  unique=True)),
                ('client_secret', models.CharField(
                    default=functools.partial(website.security.random_string, *(), **{b'length': 40}),
                    max_length=40)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('home_url', models.URLField()),
                ('callback_url', models.URLField()),
                ('owner',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApiOAuth2PersonalToken',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('token_id', models.CharField(
                    default=functools.partial(website.security.random_string, *(), **{b'length': 70}),
                    max_length=70, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('scopes', models.CharField(max_length=300)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('owner',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApiOAuth2Scope',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArchiveJob',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('done', models.BooleanField(default=False, verbose_name=b'completed')),
                ('sent', models.BooleanField(default=False, verbose_name=b'emails sent')),
                ('status', models.CharField(default=b'INITIATED', max_length=40)),
                ('datetime_initiated',
                 models.DateTimeField(default=django.utils.timezone.now, verbose_name=b'initiated at')),
                ('initiator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                                to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArchiveTarget',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('name', models.CharField(max_length=2048)),
                ('status', models.CharField(default=b'INITIATED', max_length=40)),
                ('stat_result', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True)),
                ('errors',
                 django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True,
                                                           default=list, size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlackListGuid',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', osf.utils.fields.LowercaseCharField(db_index=True, max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CitationStyle',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(db_index=True, max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('date_parsed', models.DateTimeField(default=django.utils.timezone.now)),
                ('short_title', models.CharField(max_length=2048)),
                ('summary', models.CharField(max_length=4200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid_string', django.contrib.postgres.fields.ArrayField(
                    base_field=models.CharField(blank=True, max_length=255, null=True), blank=True, null=True,
                    size=None)),
                ('content_type_pk', models.PositiveIntegerField(blank=True, null=True)),
                ('spam_status', models.IntegerField(blank=True, db_index=True, default=None, null=True)),
                ('spam_pro_tip', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('spam_data',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('date_last_reported',
                 models.DateTimeField(blank=True, db_index=True, default=None, null=True)),
                ('reports',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict,
                                                                           validators=[
                                                                               osf.models.spam._validate_reports])),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('page', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField(validators=[osf.models.validators.CommentMaxLength(500),
                                                         osf.models.validators.string_required])),
                ('ever_mentioned', django.contrib.postgres.fields.ArrayField(
                    base_field=models.CharField(blank=True, max_length=10), blank=True, default=list,
                    size=None)),
                ('node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to='osf.AbstractNode')),
            ],
            options={
                'abstract': False,
            },
            bases=(osf.models.mixins.CommentableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('endpoint', models.CharField(db_index=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('info_url', models.URLField(blank=True)),
                ('logo_url', models.URLField(blank=True)),
                ('location', models.CharField(blank=True, max_length=2048)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField()),
                ('public_projects', models.BooleanField(default=True)),
                ('poster', models.BooleanField(default=True)),
                ('talk', models.BooleanField(default=True)),
                ('field_names', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(
                    default=osf.models.conference.get_default_field_names)),
                ('num_submissions', models.IntegerField(default=0)),
                ('admins', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False)),
                ('write', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('visible', models.BooleanField(default=False)),
                ('node',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osf.AbstractNode')),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DraftRegistration',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('datetime_initiated', models.DateTimeField(default=django.utils.timezone.now)),
                ('datetime_updated', models.DateTimeField(auto_now=True)),
                ('registration_metadata',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('_metaschema_flags',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DraftRegistrationApproval',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('approval_state',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiation_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(
                    choices=[(b'unapproved', b'Unapproved'), (b'approved', b'Approved'),
                             (b'rejected', b'Rejected'), (b'completed', b'Completed')], default=b'unapproved',
                    max_length=255)),
                ('meta', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DraftRegistrationLog',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('action', models.CharField(max_length=255)),
                ('draft',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='logs', to='osf.DraftRegistration')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Embargo',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('approval_state',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiation_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(
                    choices=[(b'unapproved', b'Unapproved'), (b'approved', b'Approved'),
                             (b'rejected', b'Rejected'), (b'completed', b'Completed')], default=b'unapproved',
                    max_length=255)),
                ('notify_initiator_on_complete', models.BooleanField(default=False)),
                ('stashed_urls',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('for_existing_registration', models.BooleanField(default=False)),
                ('initiated_by',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(osf.models.sanctions.PreregCallbackMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EmbargoTerminationApproval',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('approval_state',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiation_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(
                    choices=[(b'unapproved', b'Unapproved'), (b'approved', b'Approved'),
                             (b'rejected', b'Rejected'), (b'completed', b'Completed')], default=b'unapproved',
                    max_length=255)),
                ('notify_initiator_on_complete', models.BooleanField(default=False)),
                ('stashed_urls',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExternalAccount',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('oauth_key', models.CharField(blank=True, max_length=255, null=True)),
                ('oauth_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('scopes',
                 django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128),
                                                           blank=True, default=list, size=None)),
                ('provider', models.CharField(max_length=50)),
                ('provider_name', models.CharField(max_length=255)),
                ('provider_id', models.CharField(max_length=255)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FileVersion',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('identifier', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField()),
                ('size', models.BigIntegerField(null=True)),
                ('content_type', models.CharField(blank=True, max_length=100, null=True)),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('location',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, db_index=True,
                                                                           default=dict, null=True)),
                ('metadata',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(db_index=True, default=dict)),
                ('creator',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Guid',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('_id',
                 osf.utils.fields.LowercaseCharField(db_index=True, default=osf.models.base.generate_guid,
                                                     max_length=255, unique=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('content_type',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['-created'],
                'get_latest_by': 'created',
            },
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('category', models.CharField(max_length=10)),
                ('value', models.CharField(max_length=50)),
                ('content_type',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('banner_name', models.CharField(blank=True, max_length=255, null=True)),
                ('login_url', models.URLField(null=True)),
                ('domains',
                 django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255),
                                                           db_index=True, null=True, size=None)),
                ('email_domains',
                 django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255),
                                                           db_index=True, null=True, size=None)),
                ('logo_name', models.CharField(max_length=255, null=True)),
                ('logout_url', models.URLField(null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default=b'', null=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstitutionalContributor',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False)),
                ('write', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('visible', models.BooleanField(default=False)),
                ('institution',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osf.Institution')),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MailRecord',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('data', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField()),
                ('users_created', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetaSchema',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('name', models.CharField(max_length=255)),
                ('schema', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(default=dict)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('schema_version', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='NodeLicense',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('license_id', models.CharField(max_length=128, unique=True)),
                ('name', models.CharField(max_length=256, unique=True)),
                ('text', models.TextField()),
                ('properties',
                 django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128),
                                                           blank=True, default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='NodeLicenseRecord',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('year', models.CharField(max_length=128)),
                ('copyright_holders', django.contrib.postgres.fields.ArrayField(
                    base_field=models.CharField(blank=True, max_length=256, null=True), blank=True,
                    default=list, size=None)),
                ('node_license',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to='osf.NodeLicense')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NodeLog',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('date', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now,
                                              null=True)),
                ('action', models.CharField(db_index=True, max_length=255)),
                ('params', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(default=dict)),
                ('should_hide', models.BooleanField(default=False)),
                ('foreign_user', models.CharField(blank=True, max_length=255, null=True)),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           related_name='logs', to='osf.AbstractNode')),
                ('original_node',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='osf.AbstractNode')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           related_name='logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'get_latest_by': 'date',
            },
        ),
        migrations.CreateModel(
            name='NodeRelation',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('is_node_link', models.BooleanField(db_index=True, default=False)),
                ('child',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osf.AbstractNode')),
                ('parent',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='node_relations',
                                   to='osf.AbstractNode')),
            ],
        ),
        migrations.CreateModel(
            name='NodeWikiPage',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid_string', django.contrib.postgres.fields.ArrayField(
                    base_field=models.CharField(blank=True, max_length=255, null=True), blank=True, null=True,
                    size=None)),
                ('content_type_pk', models.PositiveIntegerField(blank=True, null=True)),
                ('page_name',
                 models.CharField(max_length=200, validators=[website.addons.wiki.model.validate_page_name])),
                ('version', models.IntegerField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', models.TextField(blank=True, default=b'')),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to='osf.AbstractNode')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationDigest',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('timestamp', models.DateTimeField()),
                ('send_type', models.CharField(db_index=True, max_length=50, validators=[
                    osf.models.validators.validate_subscription_type])),
                ('event', models.CharField(max_length=50)),
                ('message', models.CharField(max_length=2048)),
                ('node_lineage',
                 django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=5),
                                                           size=None)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationSubscription',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(db_index=True, max_length=50)),
                ('event_name', models.CharField(max_length=50)),
                ('email_digest',
                 models.ManyToManyField(related_name='_notificationsubscription_email_digest_+',
                                        to=settings.AUTH_USER_MODEL)),
                ('email_transactional',
                 models.ManyToManyField(related_name='_notificationsubscription_email_transactional_+',
                                        to=settings.AUTH_USER_MODEL)),
                ('none', models.ManyToManyField(related_name='_notificationsubscription_none_+',
                                                to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           related_name='notification_subscriptions',
                                           to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PreprintProvider',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('name', models.CharField(max_length=128)),
                ('logo_name', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('banner_name', models.CharField(blank=True, max_length=128, null=True)),
                ('external_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrivateLink',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('key', models.CharField(max_length=512, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('anonymous', models.BooleanField(default=False)),
                ('creator',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to=settings.AUTH_USER_MODEL)),
                ('nodes', models.ManyToManyField(related_name='private_links', to='osf.AbstractNode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QueuedMail',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('to_addr', models.CharField(max_length=255)),
                ('send_at', models.DateTimeField(db_index=True)),
                ('email_type', models.CharField(db_index=True, max_length=255)),
                ('data', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('sent_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecentlyAddedContributor',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('contributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                  related_name='recently_added_by',
                                                  to=settings.AUTH_USER_MODEL)),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationApproval',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('approval_state',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiation_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(
                    choices=[(b'unapproved', b'Unapproved'), (b'approved', b'Approved'),
                             (b'rejected', b'Rejected'), (b'completed', b'Completed')], default=b'unapproved',
                    max_length=255)),
                ('notify_initiator_on_complete', models.BooleanField(default=False)),
                ('stashed_urls',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('initiated_by',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(osf.models.sanctions.PreregCallbackMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Retraction',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('approval_state',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiation_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(
                    choices=[(b'unapproved', b'Unapproved'), (b'approved', b'Approved'),
                             (b'rejected', b'Rejected'), (b'completed', b'Completed')], default=b'unapproved',
                    max_length=255)),
                ('notify_initiator_on_complete', models.BooleanField(default=False)),
                ('stashed_urls',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('justification', models.CharField(blank=True, max_length=2048, null=True)),
                ('initiated_by',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('data', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StoredFileNode',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('guid_string', django.contrib.postgres.fields.ArrayField(
                    base_field=models.CharField(blank=True, max_length=255, null=True), blank=True, null=True,
                    size=None)),
                ('content_type_pk', models.PositiveIntegerField(blank=True, null=True)),
                ('last_touched', models.DateTimeField(blank=True, null=True)),
                (
                'history', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=[])),
                ('is_file', models.BooleanField(default=True)),
                ('provider', models.CharField(db_index=True, max_length=25)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('path', models.CharField(blank=True, max_length=2000, null=True)),
                ('_materialized_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('checkout',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to=settings.AUTH_USER_MODEL)),
                ('copied_from', models.ForeignKey(blank=True, default=None, null=True,
                                                  on_delete=django.db.models.deletion.CASCADE,
                                                  related_name='copy_of', to='osf.StoredFileNode')),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to='osf.AbstractNode')),
                ('parent', models.ForeignKey(blank=True, default=None, null=True,
                                             on_delete=django.db.models.deletion.CASCADE,
                                             related_name='child', to='osf.StoredFileNode')),
            ],
            bases=(osf.models.mixins.CommentableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('text', models.CharField(max_length=256, unique=True)),
                ('parents', models.ManyToManyField(related_name='children', to='osf.Subject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=1024)),
                ('system', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TrashedFileNode',
            fields=[
                ('id',
                 models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id',
                 models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24,
                                  unique=True)),
                ('guid_string', django.contrib.postgres.fields.ArrayField(
                    base_field=models.CharField(blank=True, max_length=255, null=True), blank=True, null=True,
                    size=None)),
                ('content_type_pk', models.PositiveIntegerField(blank=True, null=True)),
                ('last_touched', models.DateTimeField(blank=True, null=True)),
                ('history',
                 osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=list)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_file', models.BooleanField(default=True)),
                ('provider', models.CharField(blank=True, max_length=25, null=True)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('_materialized_path', models.CharField(blank=True, max_length=300, null=True)),
                ('deleted_on', models.DateTimeField()),
                ('suspended', models.BooleanField(default=False)),
                ('checkout',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='trashed_files_checked_out', to=settings.AUTH_USER_MODEL)),
                ('content_type',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='contenttypes.ContentType')),
                ('copied_from', models.ForeignKey(blank=True, default=None, null=True,
                                                  on_delete=django.db.models.deletion.CASCADE,
                                                  to='osf.StoredFileNode')),
                ('deleted_by',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='files_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to='osf.AbstractNode')),
                ('tags', models.ManyToManyField(to='osf.Tag')),
                ('versions', models.ManyToManyField(to='osf.FileVersion')),
            ],
            options={
                'abstract': False,
            },
            bases=(osf.models.mixins.CommentableMixin, models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together=set([('name', 'system')]),
        ),
        migrations.AddField(
            model_name='storedfilenode',
            name='tags',
            field=models.ManyToManyField(to='osf.Tag'),
        ),
        migrations.AddField(
            model_name='storedfilenode',
            name='versions',
            field=models.ManyToManyField(to='osf.FileVersion'),
        ),
        migrations.AlterUniqueTogether(
            name='nodelicense',
            unique_together=set([('_id', 'license_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='metaschema',
            unique_together=set([('name', 'schema_version')]),
        ),
        migrations.AddField(
            model_name='institution',
            name='contributors',
            field=models.ManyToManyField(related_name='institutions', through='osf.InstitutionalContributor',
                                         to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='externalaccount',
            unique_together=set([('provider', 'provider_id')]),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='approval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='osf.DraftRegistrationApproval'),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='initiator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='registration_schema',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='osf.MetaSchema'),
        ),
        migrations.AddField(
            model_name='comment',
            name='root_target',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='comments', to='osf.Guid'),
        ),
        migrations.AddField(
            model_name='comment',
            name='target',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='child_comments', to='osf.Guid'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='archivejob',
            name='target_addons',
            field=models.ManyToManyField(to='osf.ArchiveTarget'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='_contributors',
            field=models.ManyToManyField(related_name='nodes', through='osf.Contributor',
                                         to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='_nodes',
            field=models.ManyToManyField(related_name='parent_nodes', through='osf.NodeRelation',
                                         to='osf.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='affiliated_institutions',
            field=models.ManyToManyField(related_name='nodes', to='osf.Institution'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='alternative_citations',
            field=models.ManyToManyField(related_name='nodes', to='osf.AlternativeCitation'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='embargo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='registrations', to='osf.Embargo'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='embargo_termination_approval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='registrations', to='osf.EmbargoTerminationApproval'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='forked_from',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='forks', to='osf.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='node_license',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='nodes', to='osf.NodeLicenseRecord'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='preprint_providers',
            field=models.ManyToManyField(related_name='preprints', to='osf.PreprintProvider'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='preprint_subjects',
            field=models.ManyToManyField(related_name='preprints', to='osf.Subject'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='registered_from',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='registrations', to='osf.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='registered_schema',
            field=models.ManyToManyField(to='osf.MetaSchema'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='registered_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='related_to', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='registration_approval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='registrations', to='osf.RegistrationApproval'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='retraction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='registrations', to='osf.Retraction'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='root',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='absolute_parent', to='osf.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='tags',
            field=models.ManyToManyField(related_name='tagged', to='osf.Tag'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='template_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='templated_from', to='osf.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='users_watching_node',
            field=models.ManyToManyField(related_name='watching', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='affiliated_institutions',
            field=models.ManyToManyField(to='osf.Institution'),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='external_accounts',
            field=models.ManyToManyField(to='osf.ExternalAccount'),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='groups',
            field=models.ManyToManyField(blank=True,
                                         help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                         related_name='user_set', related_query_name='user', to='auth.Group',
                                         verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='merged_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='merger', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='recently_added',
            field=models.ManyToManyField(through='osf.RecentlyAddedContributor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='tags',
            field=models.ManyToManyField(to='osf.Tag'),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                         related_name='user_set', related_query_name='user',
                                         to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('osf.abstractnode',),
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('osf.abstractnode',),
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('osf.abstractnode',),
        ),
        migrations.AlterUniqueTogether(
            name='storedfilenode',
            unique_together=set([('node', 'name', 'parent', 'is_file', 'provider', 'path')]),
        ),
        migrations.AlterIndexTogether(
            name='storedfilenode',
            index_together=set([('node', 'is_file', 'provider'), ('path', 'node', 'is_file', 'provider')]),
        ),
        migrations.AlterUniqueTogether(
            name='recentlyaddedcontributor',
            unique_together=set([('user', 'contributor')]),
        ),
        migrations.AddField(
            model_name='notificationsubscription',
            name='node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='notification_subscriptions', to='osf.Node'),
        ),
        migrations.AlterUniqueTogether(
            name='noderelation',
            unique_together=set([('parent', 'child')]),
        ),
        migrations.AlterOrderWithRespectTo(
            name='noderelation',
            order_with_respect_to='parent',
        ),
        migrations.AddField(
            model_name='mailrecord',
            name='nodes_created',
            field=models.ManyToManyField(to='osf.Node'),
        ),
        migrations.AlterUniqueTogether(
            name='institutionalcontributor',
            unique_together=set([('user', 'institution')]),
        ),
        migrations.AlterUniqueTogether(
            name='identifier',
            unique_together=set([('object_id', 'content_type', 'category')]),
        ),
        migrations.AlterIndexTogether(
            name='fileversion',
            index_together=set([('_id', 'metadata')]),
        ),
        migrations.AddField(
            model_name='embargoterminationapproval',
            name='embargoed_registration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='osf.Registration'),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='branched_from',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='registered_draft', to='osf.Node'),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='registered_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='draft_registration', to='osf.Registration'),
        ),
        migrations.AlterUniqueTogether(
            name='contributor',
            unique_together=set([('user', 'node')]),
        ),
        migrations.AlterOrderWithRespectTo(
            name='contributor',
            order_with_respect_to='node',
        ),
        migrations.AddField(
            model_name='archivejob',
            name='dst_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='archive_jobs', to='osf.Registration',
                                    verbose_name=b'destination node'),
        ),
        migrations.AddField(
            model_name='archivejob',
            name='src_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='osf.Node', verbose_name=b'source node'),
        ),
    ]
